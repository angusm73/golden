{"version":3,"sources":["stars.js"],"names":["max_stars","window","innerWidth","stars","canvas_width","document","body","clientWidth","canvas_height","clientHeight","pg","setup","createCanvas","i","push","Star","createGraphics","background","stroke","ellipse","filter","BLUR","loadPixels","updatePixels","DILATE","windowResized","resizeCanvas","length","splice","draw","fill","map","star","move","x","random","y","size","velocity","p5","Vector","random2D","mult","distance_to_cursor","dist","mouseX","mouseY","multiplier","mouseIsPressed","tracer_length","noStroke","image"],"mappings":";;;;;;AAAA,IAAIA,YAAYC,OAAOC,UAAP,GAAoB,GAApC;AACA,IAAIC,QAAQ,EAAZ;AACA,IAAIC,eAAeC,SAASC,IAAT,CAAcC,WAAjC;AACA,IAAIC,gBAAgBH,SAASC,IAAT,CAAcG,YAAlC;AACA,IAAIC,WAAJ;;AAEA,SAASC,KAAT,GAAiB;AACbC,iBAAaR,YAAb,EAA2BI,aAA3B;;AAEA;AACA,SAAK,IAAIK,IAAI,CAAb,EAAgBA,IAAIb,SAApB,EAA+Ba,GAA/B,EAAoC;AAChCV,cAAMW,IAAN,CAAW,IAAIC,IAAJ,EAAX;AACH;;AAED;AACAL,SAAKM,eAAe,GAAf,EAAoB,GAApB,CAAL;AACAN,OAAGO,UAAH,CAAc,eAAd;AACAP,OAAGQ,MAAH,CAAU,GAAV;AACAR,OAAGS,OAAH,CAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB;AACAT,OAAGU,MAAH,CAAUC,IAAV,EAAgB,EAAhB;AACAX,OAAGY,UAAH;AACAZ,OAAGa,YAAH;AACAb,OAAGU,MAAH,CAAUI,MAAV;AACH;;AAED,SAASC,aAAT,GAAyB;AACrBrB,mBAAeC,SAASC,IAAT,CAAcC,WAA7B;AACAC,oBAAgBH,SAASC,IAAT,CAAcG,YAA9B;AACAiB,iBAAatB,YAAb,EAA2BI,aAA3B;AACA,QAAIP,OAAOC,UAAP,GAAoB,GAApB,GAA0BF,SAA9B,EAAyC;AACrC,aAAK,IAAIa,IAAI,CAAb,EAAgBA,IAAIb,SAApB,EAA+Ba,GAA/B,EAAoC;AAChC,gBAAI,CAACV,MAAMU,CAAN,EAASc,MAAd,EAAsB;AAClBxB,sBAAMW,IAAN,CAAW,IAAIC,IAAJ,EAAX;AACH;AACJ;AACJ;AACDf,gBAAYC,OAAOC,UAAP,GAAoB,GAAhC;AACAC,YAAQA,MAAMyB,MAAN,CAAa,CAAb,EAAgB5B,SAAhB,CAAR;AACH;;AAED,SAAS6B,IAAT,GAAgB;AACZZ,eAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB;AACAa,SAAK,GAAL;AACA3B,UAAM4B,GAAN,CAAU;AAAA,eAAQC,KAAKC,IAAL,EAAR;AAAA,KAAV;AACA9B,UAAM4B,GAAN,CAAU;AAAA,eAAQC,KAAKH,IAAL,EAAR;AAAA,KAAV;AACH;;IAEKd,I;AACF,oBAAc;AAAA;;AACV,aAAKmB,CAAL,GAASC,OAAO,CAAP,EAAU/B,YAAV,CAAT;AACA,aAAKgC,CAAL,GAASD,OAAO,CAAP,EAAU3B,aAAV,CAAT;AACA,aAAK6B,IAAL,GAAYF,OAAO,CAAP,EAAU,CAAV,CAAZ;AACA,aAAKG,QAAL,GAAgBC,GAAGC,MAAH,CAAUC,QAAV,GAAqBC,IAArB,CAA0B,CAAC,KAAKL,IAAL,GAAY,CAAb,IAAkB,GAA5C,CAAhB;AACH;;;;+BACM;AACH,gBAAMM,qBAAqBC,KAAK,KAAKV,CAAV,EAAa,KAAKE,CAAlB,EAAqBS,MAArB,EAA6BC,MAA7B,CAA3B;AACA,gBAAMC,aAAa,CAACC,cAAD,GACbL,qBAAqB,GAArB,GAA2B,CAAC,MAAMA,kBAAP,IAA6B,IAAxD,GAA+D,CADlD,GAEb,CAFN;AAGA,iBAAKM,aAAL,GAAqBN,qBAAqB,GAArB,GAA2B,CAAC,MAAMA,kBAAP,IAA6B,GAAxD,GAA8D,CAAnF;AACA,iBAAKT,CAAL,IAAU,KAAKI,QAAL,CAAcJ,CAAd,GAAkBa,UAA5B;AACA,iBAAKX,CAAL,IAAU,KAAKE,QAAL,CAAcF,CAAd,GAAkBW,UAA5B;AACA,gBAAI,KAAKb,CAAL,GAAS,CAAb,EAAgB;AACZ,qBAAKA,CAAL,GAAS9B,YAAT;AACH,aAFD,MAEO,IAAI,KAAK8B,CAAL,GAAS9B,YAAb,EAA2B;AAC9B,qBAAK8B,CAAL,GAAS,CAAT;AACH;AACD,gBAAI,KAAKE,CAAL,GAAS,CAAb,EAAgB;AACZ,qBAAKA,CAAL,GAAS5B,aAAT;AACH,aAFD,MAEO,IAAI,KAAK4B,CAAL,GAAS5B,aAAb,EAA4B;AAC/B,qBAAK4B,CAAL,GAAS,CAAT;AACH;AACJ;;;+BACM;AACHc;AACA,gBAAI,KAAKD,aAAT,EAAwB;AACpBnB,qBAAK,GAAL,EAAU,GAAV,EAAe,EAAf;AACAX,wBAAQ,KAAKe,CAAL,GAAS,KAAKI,QAAL,CAAcJ,CAAd,GAAkB,KAAKe,aAAxC,EAAuD,KAAKb,CAAL,GAAS,KAAKE,QAAL,CAAcF,CAAd,GAAkB,KAAKa,aAAvF,EAAsG,KAAKZ,IAA3G,EAAiH,KAAKA,IAAtH;AACAP,qBAAK,GAAL,EAAU,EAAV,EAAc,EAAd;AACAX,wBAAQ,KAAKe,CAAL,GAAS,KAAKI,QAAL,CAAcJ,CAAd,GAAkB,KAAKe,aAAvB,GAAuC,CAAxD,EAA2D,KAAKb,CAAL,GAAS,KAAKE,QAAL,CAAcF,CAAd,GAAkB,KAAKa,aAAvB,GAAuC,CAA3G,EAA8G,KAAKZ,IAAnH,EAAyH,KAAKA,IAA9H;AACH;AACDP,iBAAK,GAAL;AACAX,oBAAQ,KAAKe,CAAb,EAAgB,KAAKE,CAArB,EAAwB,KAAKC,IAA7B,EAAmC,KAAKA,IAAxC;AACAc,kBAAMzC,EAAN,EAAU,KAAKwB,CAAL,GAAS,KAAKG,IAAL,GAAY,CAA/B,EAAkC,KAAKD,CAAL,GAAS,KAAKC,IAAL,GAAY,CAAvD,EAA0D,KAAKA,IAAL,GAAY,EAAtE,EAA0E,KAAKA,IAAL,GAAY,EAAtF;AACH","file":"stars.js","sourcesContent":["let max_stars = window.innerWidth * 0.5\r\nlet stars = []\r\nlet canvas_width = document.body.clientWidth\r\nlet canvas_height = document.body.clientHeight\r\nlet pg\r\n\r\nfunction setup() {\r\n    createCanvas(canvas_width, canvas_height)\r\n\r\n    // Generate initial stars\r\n    for (let i = 0; i < max_stars; i++) {\r\n        stars.push(new Star)\r\n    }\r\n\r\n    // Create star glow\r\n    pg = createGraphics(100, 100)\r\n    pg.background('rgba(0,0,0,0)')\r\n    pg.stroke(255)\r\n    pg.ellipse(50, 50, 25, 25)\r\n    pg.filter(BLUR, 10)\r\n    pg.loadPixels()\r\n    pg.updatePixels()\r\n    pg.filter(DILATE)\r\n}\r\n\r\nfunction windowResized() {\r\n    canvas_width = document.body.clientWidth\r\n    canvas_height = document.body.clientHeight\r\n    resizeCanvas(canvas_width, canvas_height)\r\n    if (window.innerWidth * 0.5 > max_stars) {\r\n        for (let i = 0; i < max_stars; i++) {\r\n            if (!stars[i].length) {\r\n                stars.push(new Star)\r\n            }\r\n        }\r\n    }\r\n    max_stars = window.innerWidth * 0.5\r\n    stars = stars.splice(0, max_stars)\r\n}\r\n\r\nfunction draw() {\r\n    background(10, 17, 40)\r\n    fill(255)\r\n    stars.map(star => star.move())\r\n    stars.map(star => star.draw())\r\n}\r\n\r\nclass Star {\r\n    constructor() {\r\n        this.x = random(0, canvas_width)\r\n        this.y = random(0, canvas_height)\r\n        this.size = random(4, 8)\r\n        this.velocity = p5.Vector.random2D().mult((this.size - 3) * 0.4)\r\n    }\r\n    move() {\r\n        const distance_to_cursor = dist(this.x, this.y, mouseX, mouseY)\r\n        const multiplier = !mouseIsPressed\r\n            ? distance_to_cursor < 160 ? (180 - distance_to_cursor) * 0.04 : 1\r\n            : 1\r\n        this.tracer_length = distance_to_cursor < 180 ? (180 - distance_to_cursor) * 0.2 : 0\r\n        this.x += this.velocity.x * multiplier\r\n        this.y += this.velocity.y * multiplier\r\n        if (this.x < 0) {\r\n            this.x = canvas_width\r\n        } else if (this.x > canvas_width) {\r\n            this.x = 0\r\n        }\r\n        if (this.y < 0) {\r\n            this.y = canvas_height\r\n        } else if (this.y > canvas_height) {\r\n            this.y = 0\r\n        }\r\n    }\r\n    draw() {\r\n        noStroke()\r\n        if (this.tracer_length) {\r\n            fill(186, 100, 11)\r\n            ellipse(this.x - this.velocity.x * this.tracer_length, this.y - this.velocity.y * this.tracer_length, this.size, this.size)\r\n            fill(200, 29, 37)\r\n            ellipse(this.x - this.velocity.x * this.tracer_length / 2, this.y - this.velocity.y * this.tracer_length / 2, this.size, this.size)\r\n        }\r\n        fill(255)\r\n        ellipse(this.x, this.y, this.size, this.size)\r\n        image(pg, this.x - this.size * 5, this.y - this.size * 5, this.size * 10, this.size * 10)\r\n    }\r\n}"]}