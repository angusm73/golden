{"version":3,"sources":["stars.js"],"names":["stars","canvas_width","document","body","clientWidth","canvas_height","clientHeight","max_stars","Math","min","window","innerWidth","setup","createCanvas","i","push","Star","prototype","img_star","star","createGraphics","background","stroke","translate","beginShape","vertex","bezierVertex","endShape","CLOSE","img_glow","glow","ellipse","filter","BLUR","loadPixels","updatePixels","DILATE","windowResized","resizeCanvas","length","splice","draw","fill","map","move","x","random","y","size","velocity","p5","Vector","random2D","mult","distance_to_cursor","dist","mouseX","mouseY","multiplier","mouseIsPressed","tracer_length","noStroke","image"],"mappings":"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","file":"stars.js","sourcesContent":["let stars = []\r\nlet canvas_width = document.body.clientWidth\r\nlet canvas_height = document.body.clientHeight\r\nlet max_stars = Math.min(canvas_height / 10, window.innerWidth * .5)\r\n\r\nfunction setup() {\r\n    createCanvas(canvas_width, canvas_height)\r\n\r\n    // Generate initial stars\r\n    for (let i = 0; i < max_stars; i++) {\r\n        stars.push(new Star)\r\n    }\r\n\r\n    // Create star shape\r\n    Star.prototype.img_star = (() => {\r\n        let star = createGraphics(20, 20)\r\n        star.background('rgba(0,0,0,0)')\r\n        star.stroke(255)\r\n        star.translate(10, 10)\r\n        star.beginShape()\r\n        star.vertex(-10, 0)\r\n        star.bezierVertex(-10, 0, -1, 1, 0, 10)\r\n        star.vertex(0, 10)\r\n        star.bezierVertex(0, 10, 1, 1, 10, 0)\r\n        star.vertex(10, 0)\r\n        star.bezierVertex(10, 0, 1, -1, 0, -10)\r\n        star.vertex(0, -10)\r\n        star.bezierVertex(0, -10, -1, -1, -10, 0)\r\n        star.vertex(-10, 0)\r\n        star.endShape(CLOSE)\r\n        return star\r\n    })()\r\n\r\n    // Create star glow\r\n    Star.prototype.img_glow = (() => {\r\n        let glow = createGraphics(100, 100)\r\n        glow.background('rgba(0,0,0,0)')\r\n        glow.stroke(255)\r\n        glow.ellipse(50, 50, 25, 25)\r\n        glow.filter(BLUR, 10)\r\n        glow.loadPixels()\r\n        glow.updatePixels()\r\n        glow.filter(DILATE)\r\n        return glow\r\n    })()\r\n}\r\n\r\nfunction windowResized() {\r\n    canvas_width = document.body.clientWidth\r\n    canvas_height = document.body.clientHeight\r\n    resizeCanvas(canvas_width, canvas_height)\r\n    if (Math.min(canvas_height / 10, window.innerWidth * .5) > max_stars) {\r\n        for (let i = 0; i < max_stars; i++) {\r\n            if (!stars[i].length) {\r\n                stars.push(new Star)\r\n            }\r\n        }\r\n    }\r\n    max_stars = Math.min(canvas_height / 10, window.innerWidth * .5)\r\n    stars = stars.splice(0, max_stars)\r\n}\r\n\r\nfunction draw() {\r\n    background(10, 17, 40)\r\n    fill(255)\r\n    stars.map(star => star.move())\r\n    stars.map(star => star.draw())\r\n}\r\n\r\nclass Star {\r\n    constructor() {\r\n        this.x = random(0, canvas_width)\r\n        this.y = random(0, canvas_height)\r\n        this.size = random(4, 8)\r\n        this.velocity = p5.Vector.random2D().mult((this.size - 3) * 0.4)\r\n    }\r\n    move() {\r\n        const distance_to_cursor = dist(this.x, this.y, mouseX, mouseY)\r\n        const multiplier = !mouseIsPressed\r\n            ? distance_to_cursor < 160 ? (180 - distance_to_cursor) * 0.04 : 1\r\n            : 1\r\n        this.tracer_length = distance_to_cursor < 180 ? (180 - distance_to_cursor) * 0.2 : 0\r\n        this.x += this.velocity.x * multiplier\r\n        this.y += this.velocity.y * multiplier\r\n        if (this.x < 0) {\r\n            this.x = canvas_width\r\n        } else if (this.x > canvas_width) {\r\n            this.x = 0\r\n        }\r\n        if (this.y < 0) {\r\n            this.y = canvas_height\r\n        } else if (this.y > canvas_height) {\r\n            this.y = 0\r\n        }\r\n    }\r\n    draw() {\r\n        noStroke()\r\n        if (this.tracer_length) {\r\n            image(this.img_glow, this.x - this.size * 5, this.y - this.size * 5, this.size * 10, this.size * 10)\r\n            fill(186, 100, 11)\r\n            ellipse(this.x - this.velocity.x * this.tracer_length, this.y - this.velocity.y * this.tracer_length, this.size, this.size)\r\n            fill(200, 29, 37)\r\n            ellipse(this.x - this.velocity.x * this.tracer_length / 2, this.y - this.velocity.y * this.tracer_length / 2, this.size, this.size)\r\n        }\r\n        image(this.img_star, this.x - this.size, this.y - this.size, this.size * 2, this.size * 2)\r\n    }\r\n}\r\n"]}